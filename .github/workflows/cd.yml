name: cd

on:
  push:
    tags:
      - "*.*.*"

jobs:
  rustfmt:
    name: Formatting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Formatting
        run: cargo fmt --all -- --check

  clippy:
    name: Lint
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Lint
        run: cargo clippy --all-targets --all-features -- -Dwarnings

  test:
    name: Test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        if: github.event_name != 'pull_request'
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Checkout
        if: github.event_name == 'pull_request'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Setup cargo-tarpaulin
        run: |
          curl -s https://api.github.com/repos/xd009642/tarpaulin/releases/tags/0.22.0 | \
            grep "browser_download_url.*tar.gz" | cut -d : -f 2,3 | tr -d \" | wget -qi -
          tar -xzf cargo-tarpaulin-*.tar.gz
          mv cargo-tarpaulin ~/.cargo/bin/
      - name: Run tests
        run: cargo tarpaulin --out Xml --verbose
      - name: Upload reports to codecov
        continue-on-error: true
        uses: codecov/codecov-action@v3
        with:
          name: code-coverage-report
          file: cobertura.xml
          flags: unit-tests
          fail_ci_if_error: true
          verbose: true

  publish-crates-io:
    name: Publish on crates.io
    needs:
      - rustfmt
      - clippy
      - test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Cache
        uses: Swatinem/rust-cache@v2
      - name: Publish
        run: |
          cargo publish -p i6-pack --token ${{ secrets.CARGO_TOKEN }}
          cargo publish -p i6-shell --token ${{ secrets.CARGO_TOKEN }}
          cargo publish -p i6 --token ${{ secrets.CARGO_TOKEN }}
